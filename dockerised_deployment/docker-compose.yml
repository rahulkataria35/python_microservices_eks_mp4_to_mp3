version: '3.3'

services:
  authentication:
    build:
      context: ../src/auth
      dockerfile: Dockerfile
    container_name: auth
    environment:
      - POSTGRES_HOST=postgres-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=auth_db
      - POSTGRES_PORT=5433
    ports:
      - "5000:5000"
    logging:
      driver: json-file
      options:
        max-file: "2"
        max-size: "200m"
    depends_on:
      - postgres-db
    volumes:
      - .:/app
    # network_mode: host

  # gateway service act as a producer for rabbitmq
  api-gateway:
    build:
      context: ../src/gateway
      dockerfile: Dockerfile
    container_name: Gateway
    environment:
      - MONGO_URI=mongodb://mongo-db:27017
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PASSWORD=securepassword
      - RABBITMQ_PORT=5672
      - UPLOAD_FOLDER=videos-db
      - DOWNLOAD_FOLDER=mp3-db
      - LOG_LEVEL=INFO
      - WORKERS=4
      - AUTH_SVC_ADDRESS=http://authentication:5000
    ports:
      - "8086:8086"
    depends_on:
      - mongo-db
      - rabbitmq
    volumes:
      - .:/app
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    restart: on-failure
    # network_mode: host

  # converter service act as a consumer for rabbitmq
  converter:
    build:
      context: ../src/converter
      dockerfile: Dockerfile
    container_name: converter-service
    environment:
      - MONGO_URI=mongodb://mongo-db:27017
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PORT=5672
      - RABBITMQ_PASSWORD=securepassword
      - UPLOAD_FOLDER=videos-db
      - DOWNLOAD_FOLDER=mp3-db
      - LOG_LEVEL=INFO
      - WORKERS=4
    depends_on:
      - mongo-db
      - rabbitmq
    volumes:
      - .:/app
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    restart: on-failure
    # network_mode: host

  # notification service act as a consumer for rabbitmq
  notification-service:
    build:
      context: ../src/notification
      dockerfile: Dockerfile
    container_name: notification
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=admin
      - RABBITMQ_PORT=5672
      - RABBITMQ_PASSWORD=securepassword
      - LOG_LEVEL=INFO
      - GMAIL_ADDRESS=
      - GMAIL_PASSWORD=
    depends_on:
      - rabbitmq
    volumes:
      - .:/app
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"
    restart: on-failure
    # network_mode: host

  mongo-db:
    image: mongo:6
    container_name: mongo-db
    ports:
      - "27017:27017"  # Corrected port mapping
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--port", "27017", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
    restart: always
    # network_mode: host

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=securepassword
      - RABBITMQ_ERLANG_COOKIE=secretcookie
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - rabbitmq_logs:/var/log/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always

  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth_db
      PGPORT: 5433
    ports:
      - "5433:5433"
    command: ["postgres", "-c", "port=5433"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -p 5433"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  rabbitmq_data:
  rabbitmq_logs:
  postgres-data:
  mongo-data:
